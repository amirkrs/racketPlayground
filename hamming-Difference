#lang racket

(define (hamming-distance firstseq secondseq)
  (if (= (string-length firstseq) (string-length secondseq))
      (let loop ((index 0) (distance 0))
        (if (= index (string-length firstseq))
            distance
            (let ((char1 (string-ref firstseq index))
                  (char2 (string-ref secondseq index)))
              (if (char=? char1 char2)
                  (loop (+ index 1) (+ distance 1))
                  (loop (+ index 1) distance)))))

      (error "Strings must have equal length")))

; Example usage
(define firstseq "ABD")
(define secondseq "ABC")

(display (hamming-distance firstseq secondseq)) ; Expecting 3
